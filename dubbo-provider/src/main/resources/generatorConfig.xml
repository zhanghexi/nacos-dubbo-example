<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<!-- 配置生成器 -->
<generatorConfiguration>
    <!--配置oracle jar包的本地位置-->
    <classPathEntry location="F:\apache-maven-3.6.1\repository\com\oracle\ojdbc6\11.2.0.3\ojdbc6-11.2.0.3.jar"/>
    <!--
        配置上下文
        1、id:必选，上下文id，用于在生成错误时提示
        2、MyBatis3：默认的值，生成基于MyBatis3.x以上版本的内容，包括XXXBySample
    -->
    <context id="Oracle" targetRuntime="MyBatis3">
        <!-- beginningDelimiter和endingDelimiter：指明数据库的用于标记数据库对象名的符号，比如ORACLE就是双引号，MYSQL默认是`反引号； -->
        <property name="beginningDelimiter" value="`"/>
        <property name="endingDelimiter" value="`"/>
        <!-- 自动识别数据库关键字，默认false，如果设置为true，根据SqlReservedWords中定义的关键字列表；
            一般保留默认值，遇到数据库关键字（Java关键字），使用columnOverride覆盖
         -->
        <!--<property name="autoDelimitKeywords" value="false"/>-->
        <!-- 生成的Java文件的编码 -->
        <property name="javaFileEncoding" value="UTF-8"/>
        <!-- 格式化java代码 -->
        <property name="javaFormatter" value="org.mybatis.generator.api.dom.DefaultJavaFormatter"/>
        <!-- 格式化XML代码 -->
        <property name="xmlFormatter" value="org.mybatis.generator.api.dom.DefaultXmlFormatter"/>
        <!--配置各种插件-->
        <plugin type="org.mybatis.generator.plugins.ToStringPlugin"/>
        <plugin type="org.mybatis.generator.plugins.SerializablePlugin"/>
        <plugin type="tk.mybatis.mapper.generator.MapperPlugin">
            <property name="mappers" value="tk.mybatis.mapper.common.Mapper"/>
            <property name="caseSensitive" value="true"/>
        </plugin>
        <!--覆盖生成XML文件-->
        <plugin type="org.mybatis.generator.plugins.UnmergeableXmlMappersPlugin"/>

        <!-- 整合lombok-->
        <plugin type="com.zhx.mybatis.generator.plugins.LombokGenerator">
            <property name="hasLombok" value="true"/>
        </plugin>
        <!--自定义注释插件-->
        <plugin type="com.zhx.mybatis.generator.plugins.CommentGenerator">
            <property name="makeConstant" value="true"/>
            <property name="author" value="Lucien"/>
        </plugin>

        <commentGenerator>
            <property name="suppressAllComments" value="true"/>
        </commentGenerator>
        <!--必须要有的，使用这个配置链接数据库-->
        <jdbcConnection driverClass="oracle.jdbc.OracleDriver"
                        connectionURL="jdbc:oracle:thin:@192.168.93.132:1522:orcl"
                        userId="testUser"
                        password="zhx891121">
            <!-- 设置 useInformationSchema 属性为 true(mysql版本) -->
            <!--<property name="useInformationSchema" value="true"/>-->
            <!--生成oracle注释(PS：remarksReporting才是生成Oracle数据库字段中文注释真正的配置！)-->
            <!--详见https://blog.csdn.net/suzuking/article/details/78294549-->
            <property name="remarksReporting" value="true"/>
        </jdbcConnection>
        <!-- java类型处理器
            用于处理DB中的类型到Java中的类型，默认使用JavaTypeResolverDefaultImpl；
            注意一点，默认会先尝试使用Integer，Long，Short等来对应DECIMAL和 NUMERIC数据类型；
        -->
        <javaTypeResolver type="org.mybatis.generator.internal.types.JavaTypeResolverDefaultImpl">
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>
        <javaModelGenerator targetPackage="${targetModelPackage}" targetProject="${targetJavaProject}">
            <!-- 设置是否在getter方法中，对String类型字段调用trim()方法 -->
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>
        <sqlMapGenerator targetPackage="${targetXMLPackage}" targetProject="${targetResourcesProject}"/>
        <javaClientGenerator targetPackage="${targetMapperPackage}" targetProject="${targetJavaProject}"
                             type="XMLMAPPER"/>
        <!--表配置-->
        <table tableName="EMPLOYEE"
               enableCountByExample="false" enableUpdateByExample="false"
               enableDeleteByExample="false" enableSelectByExample="false"
               selectByExampleQueryId="false">
            <generatedKey column="ID" sqlStatement="Oracle" identity="true"/>
        </table>
    </context>
</generatorConfiguration>